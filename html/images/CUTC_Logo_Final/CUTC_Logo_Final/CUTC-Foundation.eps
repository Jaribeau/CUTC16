%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F34) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 864 864
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 864 864
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: RNDEGO+Montserrat-Bold
%!FontType1-1.0: RNDEGO+Montserrat-Bold 1.0000.2.0010
14 dict begin/FontName /RNDEGO+Montserrat-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /O put
dup 35 /U put
dup 36 /N put
dup 37 /D put
dup 38 /A put
dup 39 /T put
dup 40 /I put
dup 41 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -111 1 index div -250 2 index div 1083 3 index div 948 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/A 1 def
/C 2 def
/D 3 def
/F 4 def
/I 5 def
/N 6 def
/O 7 def
/T 8 def
/U 9 def
/fi 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-111 -250 1083 948}def
/UniqueID 4331511 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52DD435E23F751ACC3DB281CCA5CE01783E6A1FA5B89385C20EE8342A395EE649497BFE6D3F002416660F16EC50AEB111459F07F9F94207A9797855C305E98254E48AC93FB30544B191A6B53D69671E06DC735582262BE8FD6B08F6688618D455B53E867407130A579279605B8F9B439712C36A85FF28AAB8C5FDF4EBB0218D8CE5C09F7F0748FEB0C61AFA3F5DC5761DDE0A09BD23EFF6D158EF957D4B33499855870EE6EE7913998B65FAE429EC64C20A25473A69CD1C4A1023CAA523F122CFF3605CF195E77F7504E4FD24F153279DEF37BD42341F2FCDA573602A86254BEC66336FDC1256930ED4F8C8FD8BA17CA3EA9FC1B257471B0D2BF30E1CBE33E0958B8BC0E8D1E49AF02E43A619E4060E5364C42DE28C3F8F796136C4946F470C199400899E5759A1EB003E259978974925ED9E1ABC1F979C384F61722E66B7EE7EE0FFFA292D1D21BBCF396994E981669C0F10F28E92C53146FDEB788A822DFE32BB984E57CAC9CD97139A3D7EF9D64504C4FFA8D00D3997B3CAE82401F5FABBBFF0631A2B94D19F99A7B0D2C00E3EFEB3B88812E760387A94A2D53BCC14DFB0B1C51D6FFBCFEFA0D9D96A1F2657229E516EAC9CC2E09A7F6F325569769F2CD68475B370FC0DF79B5CE5D3F59B82FD29E070A374761C8088CAC35C5C0A2111CC89BB84B0EB4A0B65BC9A5BC18C4081401D0A5CFB642996A520CA9B09DF42728C74009714522D9
797E3B6367687DC21AB86294037231AB4D4E864529AB41EFE3859DDE7CBCAFCAC08F63668B4825A9B734FE28BF4500EE9269166DFD5B4DC9E2BF415CCE16E9BD9ED706422FDF2B8C776706CDBFBD40951A2EF450D4B9E7928B1374B111E1E1B29F7AC816B9834D6EBB8887D34735201D458CFCD67BF0645E20B6B7FF6C2A7A8FAAB42A637E34237C98626AE4AAAB8C75CBC832106EAC65E36DAED87959DB42301DB4359FD79A9893AA9778A3D4ED6449BA8077986CF31241E97E74E7547AF024309BF0BC7BF92938993687B4D348F4826E52FEA276116042E4CC7A7A318757FC94165E1BA061D33FAECE053796FF50983E8F85867F492B0FF6F0E8DDF00652DC57754DB8B732E56CB598A7693BF920EAC8B9E3D97DA9F838E513FA762FC7394818F031030CDDDE9E2DA4561EB74D11A12003A00938FC0FD08BB60453B4A4F6F348800DE9117B56B05D3FB91B4536EF342CB9CA8D741600294781C1CF83A5981C7B5EA6DD3A73B72D5D392CF24D65D85186923FFA2E13BA6BACA037DE2304A2668DF61AD0462E3A1F5D566FF53030789C55F4550223D69E0D830452745E45CA18B2DCA73F2038079805AD21E3ACDAC7D1E892EB6D93C946E6C827D76DCA062758E4618B2D7879EF4F69EEE92AF76F3EC2CF139EBD840EEC65AA2A9B6B201D81D8A73B0E1CF21B1F3EE2A3820FABE3755443DF97E73EB8F46ADF0B39445010C88A89DAC2AEE6F06FF68B227D49CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/RNDEGO+Montserrat-Bold cguidfix
/F1.1/RNDEGO+Montserrat-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 864 864 rc
0 864 m
864 864 l
864 0 l
0 0 l
h
f
Q
/Cs2 SC
0.54509807 0.06666667 0.039215688 sc
0.60000002 i
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
184 116 517 140 rc
1 0 0 -1 204 166 cm
/F1.1[ 40 0 0 -40 0 0]sf
0 39 m
(!"#$%&'\("$)[ 43.980000 52.540000 49.540000 52.180000 49.460000 47.260000 43.820000 32.620000 52.540000 0.000000 ] xS
Q
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
168 158 172 450 rc
1 0 0 -1 188 378 cm
/F1.1[ 180 0 0 -180 0 0]sf
0 174 m
(\))s
Q
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
292 158 176 450 rc
1 0 0 -1 312 378 cm
/F1.1[ 180 0 0 -180 0 0]sf
0 174 m
(#)s
Q
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
424 158 150 450 rc
1 0 0 -1 444 378 cm
/F1.1[ 180 0 0 -180 0 0]sf
0 174 m
(')s
Q
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
523 158 172 450 rc
1 0 0 -1 543 378 cm
/F1.1[ 180 0 0 -180 0 0]sf
0 174 m
(\))s
Q
/Cs1 SC
0.54509807 0.06666667 0.039215688 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
486 542.12115 m
483.56284 553.26074 479.34903 563.32251 473.23422 571.49664 c
443.60016 611.1106 425.4393 604.44037 396.5632 598.45062 c
385.75519 596.20868 367.41452 593.3092 348.69412 585.72705 c
336.57535 563.1911 327.79657 539.2901 326 515.67572 c
326.02679 515.65363 326.05569 515.62994 326.08664 515.60468 c
326.37875 515.41461 326.67935 515.22095 326.98843 515.02386 c
352.96161 506.86871 419.58395 491.62402 469.595 529.50732 c
473.83557 532.71954 479.38989 536.9931 486 542.12115 c
486 542.12115 l
h
486 542.12115 m
W*
0 0 864 864 rc
321 608 m
491 608 l
491 500 l
321 500 l
h
321 608 m
f*
Q
0.3882353 0.047058824 0.027450981 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
398.737 598.90625 m
398.01904 598.75446 397.29456 598.60229 396.5632 598.45062 c
385.75519 596.20868 367.41452 593.3092 348.69412 585.72705 c
336.57535 563.1911 327.79657 539.2901 326 515.67572 c
326.02679 515.65363 326.05569 515.62994 326.08664 515.60468 c
326.37875 515.41461 326.67935 515.22095 326.98843 515.02386 c
328.01898 514.70032 329.11356 514.36554 330.26852 514.02344 c
338.16632 549.03748 368.28412 577.87964 398.737 598.90625 c
398.737 598.90625 l
h
398.737 598.90625 m
W*
0 0 864 864 rc
321 603.90625 m
403.737 603.90625 l
403.737 509.02341 l
321 509.02341 l
h
321 603.90625 m
f*
Q
0.89019608 0.54901963 0.52941179 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
344.89413 504.58972 m
376.66177 497.31293 429.52847 492.30072 471 523.59998 c
520.32904 560.82947 747 740.79999 747 740.79999 c
747 740.79999 700.5976 685.80457 648.16595 612.2287 c
621.83325 589.97351 576.90588 553.65948 536 528.59998 c
445.73627 473.30328 379.12305 489.01144 344.89413 504.58972 c
344.89413 504.58972 l
h
344.89413 504.58972 m
W*
0 0 864 864 rc
339.89413 745.79999 m
752 745.79999 l
752 484.92371 l
339.89413 484.92371 l
h
339.89413 745.79999 m
f*
Q
0.84705883 0.36862746 0.34117648 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
537 523.59998 m
599.76593 562.05121 672.59998 626.79999 672.59998 626.79999 c
672.59998 626.79999 624.87518 564.3924 583.04773 510.81216 c
550.60596 491.69046 475 449 433 452 c
404.01749 454.07019 365 481 343 500 c
376.95508 484.29279 445.9437 467.81775 537 523.59998 c
h
537 523.59998 m
W*
0 0 864 864 rc
338 631.79999 m
677.59998 631.79999 l
677.59998 446.84973 l
338 446.84973 l
h
338 631.79999 m
f*
Q
0.78431374 0.098039217 0.05882353 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
434 446.90546 m
485.80002 442.69437 598.20001 514 598.20001 514 c
598.20001 514 530.21698 418.9783 441.35953 388.85596 c
425.21387 389.23071 369.52542 391.20367 352 414 c
333.85104 437.60742 323 469 324.5354 509.44116 c
340.03116 494.90921 390.71613 450.42422 434 446.90546 c
h
434 446.90546 m
W*
0 0 864 864 rc
319.39142 519 m
603.20001 519 l
603.20001 383.85596 l
319.39142 383.85596 l
h
319.39142 519 m
f*
Q
0.7019608 0.086274512 0.050980393 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
444 707 m
444 707 326.53027 608.59998 320 515 c
316.81735 469.38235 329.29956 435.62552 349 410 c
369.72168 383.04611 441 383.80566 441 383.80566 c
405.00003 371.80566 358.81586 381.70663 327 392 c
293 403 250 480 276 547 c
303.0159 616.61792 444 707 444 707 c
h
444 707 m
W*
0 0 864 864 rc
263.02332 712 m
449 712 l
449 373.30713 l
263.02332 373.30713 l
h
263.02332 712 m
f*
Q
0.89019608 0.54901963 0.52941179 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
364.07605 610.47003 m
421.97052 656.66132 577.79999 760 577.79999 760 c
577.79999 760 495.82654 721.80652 424.67368 682.4339 c
407.44339 665.36823 383.95459 639.89398 364.07605 610.47003 c
364.07605 610.47003 l
h
364.07605 610.47003 m
W*
0 0 864 864 rc
359.07605 765 m
582.79999 765 l
582.79999 605.47003 l
359.07605 605.47003 l
h
359.07605 765 m
f*
Q
0.93333334 0.72941178 0.71764708 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
487.56039 536.28735 m
480.88339 531.12598 475.27557 526.82684 471 523.59998 c
429.52847 492.30072 376.66177 497.31293 344.89413 504.58972 c
344.89413 504.58972 l
372.79471 491.8916 422.21188 479.10721 488.41571 504.76138 c
489.40601 515.6228 489.14822 526.30872 487.56039 536.28735 c
487.56039 536.28735 l
h
487.56039 536.28735 m
W*
0 0 864 864 rc
339.89413 541.28735 m
494 541.28735 l
494 484.92371 l
339.89413 484.92371 l
h
339.89413 541.28735 m
f*
Q
0.89019608 0.54901963 0.52941179 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
477.13345 459.54788 m
460.80539 454.22659 445.43079 451.11209 433 452 c
404.01749 454.07019 365 481 343 500 c
370.53482 487.26273 421.10733 474.02054 487.80347 499.2142 c
486.06561 485.79071 482.45798 472.23807 477.13345 459.54788 c
477.13345 459.54788 l
h
477.13345 459.54788 m
W*
0 0 864 864 rc
338 505 m
492.80347 505 l
492.80347 446.84973 l
338 446.84973 l
h
338 505 m
f*
Q
0.84705883 0.36862746 0.34117648 sc
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
474.32608 453.27347 m
459.21799 448.612 445.194 445.99545 434 446.90546 c
390.71613 450.42422 340.03116 494.90921 324.5354 509.44116 c
323 469 333.85104 437.60742 352 414 c
359.06598 404.80884 372.33572 399.00272 386.71622 395.32156 c
388.38589 395.21542 390.08063 395.12836 391.80072 395.06085 c
429.7674 393.57086 458.3006 419.6217 474.32608 453.27347 c
474.32608 453.27347 l
h
474.32608 453.27347 m
W*
0 0 864 864 rc
319.39142 514.44116 m
479.32608 514.44116 l
479.32608 390 l
319.39142 390 l
h
319.39142 514.44116 m
f*
Q
q
0 864 m
864 864 l
864 0 l
0 0 l
h
0 864 m
W*
340.98312 582.31146 m
329.65207 560.56744 321.57977 537.64325 320 515 c
316.81735 469.38235 329.29956 435.62552 349 410 c
352.642 405.26263 357.84576 401.38135 363.94977 398.20157 c
303.44733 410.1283 285 452.15704 285 489.77936 c
285 542.57532 312.26865 568.59351 340.98312 582.31146 c
340.98312 582.31146 l
h
340.98312 582.31146 m
W*
0 0 864 864 rc
280 587.31146 m
368.94977 587.31146 l
368.94977 393.20157 l
280 393.20157 l
h
280 587.31146 m
f*
ep
end
%%Trailer
%%EOF
